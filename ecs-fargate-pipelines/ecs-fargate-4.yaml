pipeline:
  name: ecs-fargate
  identifier: ecsfargate
  projectIdentifier: BATCH21
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: github_connector
        repoName: frontend
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Sonarqube
                  name: Sonar_Scan
                  identifier: Sonar_Scan
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                      args:
                        cli: "-Dsonar.organization=tcn -Dsonar.projectName=frontend"
                    auth:
                      access_token: <+secrets.getValue("sonarqube_token")>
                      domain: https://sonarcloud.io/
                      ssl: true
              - step:
                  type: BuildAndPushECR
                  name: Docker Build_Push
                  identifier: Docker_Build_Push
                  spec:
                    connectorRef: aws_connector
                    region: us-east-1
                    account: "841162679093"
                    imageName: frontend
                    tags: <+input>
              - step:
                  type: AquaTrivy
                  name: AquaTrivy
                  identifier: AquaTrivy
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: container
                      detection: auto
                    advanced:
                      log:
                        level: info
                      fail_on_severity: none
                    privileged: true
                    image:
                      region: us-east-1
                      type: aws_ecr
                      tag: <+pipeline.sequenceId>
                      access_id: <+secrets.getValue("aws_access_key")>
                      access_token: <+secrets.getValue("aws_secret_key")>
                      name: frontend
